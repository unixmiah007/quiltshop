generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Add SHIPPED and DONE to your enum
enum OrderStatusOnline {
  PENDING
  PAID
  SHIPPED
  DONE
  CANCELED
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique(map: "email")
  password  String
  role      Role     @default(USER)
  address1  String?
  address2  String?
  city      String?
  state     String?
  postal    String?
  country   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  orders    Order[]
}

model Product {
  id          Int         @id @default(autoincrement())
  title       String
  description String      @db.Text
  priceCents  Int
  stock       Int         @default(0)
  imageUrl    String?     @db.VarChar(512)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now()) @updatedAt
  OrderItem   OrderItem[]
}

model Order {
  id              Int         @id @default(autoincrement())
  userId          Int
  totalCents      Int
  status          OrderStatus @default(PENDING)
  stripeSession   String?     @unique(map: "stripeSession")
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @default(now()) @updatedAt
  shippingName    String?
  shippingAddr1   String?
  shippingAddr2   String?
  shippingCity    String?
  shippingState   String?
  shippingPostal  String?
  shippingCountry String?
  billingName     String?
  billingAddr1    String?
  billingAddr2    String?
  billingCity     String?
  billingState    String?
  billingPostal   String?
  billingCountry  String?
  user            User        @relation(fields: [userId], references: [id], map: "fk_order_user")
  items           OrderItem[]

  @@index([userId], map: "fk_order_user")
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  unitCents Int
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade, map: "fk_item_order")
  product   Product @relation(fields: [productId], references: [id], map: "fk_item_product")

  @@index([orderId], map: "fk_item_order")
  @@index([productId], map: "fk_item_product")
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  PAID
  CANCELED
}
